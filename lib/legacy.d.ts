declare const async: any;
declare const crypto: any;
declare const fs: any;
declare const path: any;
declare const executableFolder: string;
declare const fileHashes: {};
declare const duplicates: any[];
declare let folders: any[];
declare const queueProcessor: (filepath: any, callback: any) => any;
declare const fileQueue: any;
declare const options: {
    verbose: boolean;
    archiveDuplicates: boolean;
    removeDuplicates: boolean;
    fast: boolean;
    superfast: boolean;
    crazyfast: boolean;
    filename: boolean;
    reverse: boolean;
    log: boolean;
    subFolders: boolean;
    algorithm: string;
};
declare const startTime: number;
declare const showHelp: () => void;
declare const getParams: () => any[];
declare const mkdirRecursive: (target: any) => any;
declare const getFileHash: (filepath: any, maxBytes: any, callback: any) => any;
declare const saveHash: (hash: any, filepath: any) => number | void;
declare var scanFile: (filepath: any, callback: any) => any;
declare var scanFolder: (folder: any, callback: any) => any;
declare var finished: (err: any, result: any) => void;
declare const run: () => any;
